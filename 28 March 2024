Q-Link : https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency/?envType=daily-question&envId=2024-03-28

class Solution {
public:
    int maxSubarrayLength(vector<int>& nums, int k) {
        unordered_map<int,int>mp;

        int i=0,j=0;

        int n=nums.size();

        int ans=0;

        while(j<n){
            mp[nums[j]]++;

            if(mp[nums[j]]<=k){
                ans=max(ans,j-i+1);
            }
            else{
                int freq=mp[nums[j]];

                while(freq>k){
                    mp[nums[i]]--;
                    if(nums[i]==nums[j])freq--;
                    i++;
                }
            }
            j++;
        }

        return ans;
    }
};
