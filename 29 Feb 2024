Q-Link : https://leetcode.com/problems/even-odd-tree/description/?envType=daily-question&envId=2024-02-29

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        
        queue<TreeNode*>q;
        q.push(root);

        bool iseven=false;

        int prev=root->val;

        while(!q.empty()){
            int sz=q.size();
            int startSz=q.size();
            TreeNode* start=q.front();
            prev=start->val;
            while(sz>0){
                TreeNode* tmp=q.front();
                q.pop();

                if(tmp->left)q.push(tmp->left);
                if(tmp->right)q.push(tmp->right);

                if(iseven){
                    if(tmp->val>=prev && sz!=startSz)return false;
                    if(tmp->val%2==1)return false;
                }
                else{
                    if(tmp->val<=prev && sz!=startSz)return false;
                    if(tmp->val%2==0)return false;
                }
                prev=tmp->val;
                sz--;
            }
            iseven=!iseven;
        }

        return true;

    }
};
