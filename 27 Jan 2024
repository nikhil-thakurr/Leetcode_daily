Q-Link : https://leetcode.com/problems/k-inverse-pairs-array/description/?envType=daily-question&envId=2024-01-27

class Solution {
public:
    const int M = 1e9+7;
    int t[1001][1001];
    int solve(int n, int k) {
        if(n == 0)
            return 0;
        
        if(k == 0)
            return 1;
        
        if(t[n][k] != -1)
            return t[n][k];

        int totalInversions = 0;
        
        //In an array of length n, We can't create inversions more than (n-1) -> min(n-1, k)
        for(int i = 0; i <= min(n-1, k); i++) {
            totalInversions = (totalInversions%M + kInversePairs(n-1, k-i)%M)%M;
        }
        
        return t[n][k] = totalInversions;
    }

    int kInversePairs(int n, int k) {
        memset(t, -1, sizeof(t));
        return solve(n, k);
    }
};
