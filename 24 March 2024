Q-Link : https://leetcode.com/problems/find-the-duplicate-number/description/?envType=daily-question&envId=2024-03-24

Approach 1 : 
class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        for(int i=0;i<nums.size();i++){
            int val=abs(nums[i]);
            if(nums[val]<0)return val;
            else nums[val]*=-1;
        }

        return -1;
    }
};


Approach 2 : Hare & Tortoise

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int slow=nums[0],fast=nums[0];
        slow=nums[slow];
        fast=nums[fast];
        fast=nums[fast];
        while(slow!=fast){
            slow=nums[slow];
            fast=nums[fast];
            fast=nums[fast];
        }
        cout<<slow<<" "<<fast;

        slow=nums[0];

        while(slow!=fast){
            slow=nums[slow];
            fast=nums[fast];
        }
        return slow;
    }
};
